SpringBoot2.x 学习历程

    章节二：
        1. 配置讲解
            1). @RestController @RequestMapping 都是 SpringMVC 中的内容
            2). @RestController = @Controller + @ResponseBody
            3). @SpringBootApplication = @SpringBootConfiguration + @EnableAutoConfiguration + @ComponentScan

        2. 开发接口必备工具之Postman接口调试工具介绍和使用
            简介：http接口测试工具安装和讲解
            1). 接口调试工具的安装和基本使用
            2). 下载地址：https://www.getpostman.com/

        3. SpringBoot基础HTTP接口GET请求
            简介：讲解SpringBoot接口，http的Get请求，各个注解使用
            1). 单一参数 @RequestMapping(path="/{user_id}", method=RequestMethod.GET)
                @PathVariable

            2). 多个参数 @RequestMapping(path="/{dep_id}/{user_id}", method=RequestMethod.Get)
                method 属性：可以指定多个请求方法：get post 都可以
                @RequestMapping(method = {})

            3). 一个顶俩
                @GetMapping = @RequestMapping(method = RequestMethod.GET)
                @PostMapping = @RequestMapping(method = RequestMethod.POST)
                @PutMapping = @RequestMapping(method = RequestMethod.PUT)
                @DeleteMapping= @RequestMapping(method = RequestMethod.DELETE)

            4). @RequestParam 设置请求参数的默认值
                pageUser( @RequestParam(defaultValue=0, name="page_index") int from, int to) {}

            5). @RequestMapping + @RequestBody 将请求参数映射到实体类中

            6). HttpServletRequest request自动注入获取参数

            7). @RequestHeader 获取 http 头信息

        4. SpringBoot基础HTTP接口：post,put,delete请求实战
            简介：讲解http请求post,put,delete提交方式
            1). post ---> @PostMapping
            2). put  ---> @PutMapping
            3). delete ---> @DeleteMapping

        5. 常用json框架介绍和Jackson返回结果处理
            简介：介绍常用json框架和注解
            1.常用框架---阿里：fastjson，谷歌：gson等
                JavaBean序列化为json，性能：Jackson > FastJson > Gson > Json-lib 同个结构
                    测试方法：循环序列化  百万次，次数达到一定才可以看出差别

            2. jackson处理相关内容
                指定字段不返回：@JsonIgnore
                指定日期格式：@JsonFormat(pattern="yyyy-MM-dd hh:mm:ss", local="zh", timezone="GMT+8")
                空字段不返回：@JsonInclude(Include.NON_NULL)
                指定别名：@JsonProperty

        6. springboot目录文件结构讲解
            简介：讲解目录接口

            1). 目录讲解
                src/main/java：存放代码
                src/main/resources
                    static: 存放静态文件，比如：css、js、image, (访问方式：http://localhost:8080/js/main.js)
                    templates: 存放静态页面 jsp,html,tpl
                    config: 存放配置文件，application.properties
                    resources:

            2). 引入依赖 Thymeleaf
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-thymeleaf</artifactId>
                </dependency>

            3). 同个文件的加载顺序，静态资源文件
                spring boot 默认会挨个从：
                    META/resources > resources > static > public  里面找是否存在相应的资源，如果有则直接返回。

            4). 默认配置
                a). 官网地址：
                        https://docs.spring.io/spring-boot/current/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc-static-content
                b). spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/
                                                        classpath:/public/

            5). 静态资源文件存储在CDN